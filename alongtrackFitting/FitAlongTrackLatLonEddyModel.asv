function params = FitAlongTrackLatLonEddyModel(alongtrackLatLon, eddyFit_fun, initialParams, options)
arguments (Input)
    alongtrackLatLon struct
    eddyFit_fun function_handle
    initialParams {mustBeNumeric,mustBeReal,mustBeFinite}
    % options.windowLength="full"
end
arguments (Output)
    params {mustBeNumeric,mustBeReal,mustHaveSameSize(initalParams,params)}
end
% lato and lono are the center of the alongtrack domain
lono=(min(alongtrackLatLon.lon(:))+max(alongtrackLatLon.lon(:)))/2;
lato=(min(alongtrackLatLon.lat(:))+max(alongtrackLatLon.lat(:)))/2;

% Project {lat,lon} -> {x,y}
[x_km, y_km] = latlon2xy(alongtrackLatLon.lat, alongtrackLatLon.lon, lato, lono);

alongtrack.x=x_km*1000;
alongtrack.y=y_km*1000;

% Call eddy model fit in XY
params = FitAlongTrackXYToEddyModel(alongtrack, eddy_Fit_fun, initialParams);